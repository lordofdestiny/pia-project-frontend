:host ::ng-deep .mat-form-field-disabled input {
    color: var(--primary);
}

:host ::ng-deep .mat-form-field-disabled mat-label {
    font-weight: 500;
    color: var(--accent);
}

form {
    font-size: 1.3em;
}

.edit {
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-end;
}

button:not(.image-overlay) {
    display: flex;
    align-items: center;
    font-weight: bold;
    color: var(--bg-color);
}

button:not(.image-overlay) mat-icon {
    font-size: xx-large;
    height: max-content;
    width: max-content;
}



.edit>button {
    margin: 0 0.5rem;
}

.grid-container {
    margin: 1rem 0;
    display: grid;
    grid-template-columns: 2fr 1fr;
    grid-template-rows: auto auto;
    grid-gap: 0.25rem;
    grid-template-areas:
        "editing picture"
}

@media screen and (max-width: 768px) {
    .grid-container {
        grid-template-columns: 1fr;
        grid-template-rows: 1fr;
        grid-template-areas:
            "picture"
            "editing"
    }
}


.grid-child.editing {
    grid-area: editing;
    display: flex;
    justify-content: center;
    flex-flow: column nowrap;
}

.grid-child.editing .fields {
    height: 100%;
    margin-top: 1rem;
    display: flex;
    flex-flow: row wrap;
    justify-content: space-between;
    align-items: flex-end;
}


.grid-child.editing .fields .mat-form-field:not(:has(textarea)) {
    margin: 0rem 0.5rem;
    flex: 0 1 calc(50% - 1rem);
}

.grid-child.editing .fields .mat-form-field:has(textarea) {
    flex: 1 1 calc(100% - 1rem);
    margin: 0rem 0.5rem;
}

.cancel-edit-button mat-icon {
    font-weight: 600 !important;
}

.cancel-edit-button.visible {
    visibility: visible;
    opacity: 1;
    transition: visibility 0s linear 0s, opacity 300ms;
}

.cancel-edit-button.hidden {
    visibility: hidden;
    opacity: 0;
    transition: visibility 0s linear 300ms, opacity 300ms;
}

.grid-child.picture {
    grid-area: picture;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    flex-flow: column wrap;

}

.grid-child.populate {
    grid-area: populate;
}

.image-border img {
    min-width: 300px;
    min-height: 300px;
    object-fit: cover;
}

.image-border {
    width: -moz-fit-content;
    width: fit-content;
    position: relative;
    border: double 10px transparent;
    border-radius: 50%;
    background-origin: border-box;
    background-image: linear-gradient(white, white),
        radial-gradient(circle at top left, var(--warn), var(--accent), var(--primary));
    background-clip: padding-box, border-box;
    overflow: hidden;
}